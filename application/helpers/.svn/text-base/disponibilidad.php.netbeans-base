<?php defined('SYSPATH') OR die('No direct access allowed.');

class disponibilidad_Core {
	var $id; // Nro de la propiedad
	var $sql; // Busqueda
	var $month;
	var $year;

	function disponibilidad($id=0,$dir="v",$cant=5,$salto=3){
		global $site;
		$this->conn = &$conn;
		$this->id = $id;
		$this->dir = $dir;
		if ($this->id!=0){
			$this->time = time();
			$this->year=date('Y', $this->time);
			$this->month=date('n', $this->time);

			$this->sql = "SELECT r.propiedad_id, r.fecha_entrada, r.fecha_salida FROM reservas AS r
				WHERE r.confirmada='s'
				AND YEAR(r.fecha_salida)>=YEAR(NOW())
				AND r.propiedad_id=".$this->id."
				ORDER BY r.fecha_salida ";

			/*$this->sql="SELECT * FROM reservas AS r
				WHERE r.confirmada='s'
				AND YEAR(r.fecha_salida)>=YEAR(NOW())
				AND r.propiedad_id=".$this->id."
				ORDER BY r.fecha_entrada ";*/
			$this->ejecutar();
			} else {
				return "Debe haber un nro de propiedad";
			}
		}

function display (){
	$this->oldlocale = setlocale(LC_TIME, NULL); #save current locale
	setlocale(LC_TIME, 'es_AR');
	if ($this->result){
		$days = array();
		foreach($this->result as $reservas)
		{
			$fecha_entrada=strtotime($reservas['fecha_entrada']);
			$fecha_salida=strtotime($reservas['fecha_salida']);
			$dayIterator = new DayIterator($fecha_entrada, $fecha_salida);

			foreach($dayIterator as $day => $date)
			{
				$year_reser=date('Y', $date);
				$mes_reser=date('n', $date);
				$dia_reser=date('j', $date);
				$days[$year_reser][$mes_reser][$dia_reser]=array(NULL,'booked');
			}
		}
	}// End Iteration
		$calendario="<h3>Disponibilidad de la Propiedad</h3>";

		if ($this->dir=="v")
		{
			$calendario.="<table class=\"disponibilidad\">";
			for($this->month=date('n', $this->time); $this->month<=date('n', $this->time)+$cant; $this->month++)
			{
				$calendario.="<tr>";
    			$calendario.="<td style=\"vertical-align: top\">";
				$calendario.=$this->generate_calendar($this->year, $this->month, $days[$this->month]);
				$calendario.="</td>";
				$calendario.="</tr>";
			}

			$calendario.="</table>";
		} else { // Horizontal
			//$days="";
			$calendario.="<table class=\"disponibilidad\">";
			$calendario.="<tr>";
			$nextyear = $this->year+1;

			for($month=date('n', $this->time); $month<=date('n', $this->time)+5; $month++)
			{
    			$calendario.="<td style=\"vertical-align: top\">";
				//echo $month."<br />";

    			if ($month>12) {
					$mes=$month-12;
					$ano = $nextyear;
				} else {
					$mes=$month;
					$ano = $this->year;
				}

				$calendario.=$this->generate_calendar($this->year, $month, $days[$ano][$mes]);
				$calendario.="</td>";
				$count++;
				if($count==3) {
					$calendario.="</tr><tr>";
					$count=0;
				}
			}
			$calendario.="</tr>";
			$calendario.="</table>";
		}
	$calendario.="<p class=\"nota\">Los datos en <span class=\"rojo\">Rojo</span> indican que la propiedad no se encuentra disponible en esas fechas.</p>
<p class=\"nota\">La disponibilidad de la propiedad est&aacute; sujeta a confirmaci&oacute;n</p>";
setlocale(LC_TIME, $this->oldlocale);
return $calendario;
} //end function



# PHP Calendar (version 2.3), written by Keith Devens
# http://keithdevens.com/software/php_calendar
#  see example at http://keithdevens.com/weblog
# License: http://keithdevens.com/software/license

function generate_calendar($year, $month, $days = array(), $day_name_length = 3, $month_href = NULL, $first_day = 0, $pn = array()){
	$first_of_month = gmmktime(0,0,0,$month,1,$year);
	#remember that mktime will automatically correct if invalid dates are entered
	# for instance, mktime(0,0,0,12,32,1997) will be the date for Jan 1, 1998
	# this provides a built in "rounding" feature to generate_calendar()

	$day_names = array(); #generate all the day names according to the current locale
	for($n=0,$t=(3+$first_day)*86400; $n<7; $n++,$t+=86400) #January 4, 1970 was a Sunday
		$day_names[$n] = ucfirst(gmstrftime('%A',$t)); #%A means full textual day name

	list($month, $year, $month_name, $weekday) = explode(',',gmstrftime('%m,%Y,%B,%w',$first_of_month));
	$weekday = ($weekday + 7 - $first_day) % 7; #adjust for $first_day
	$title   = htmlentities(ucfirst($month_name)).'&nbsp;'.$year;  #note that some locales don't capitalize month and day names

	#Begin calendar. Uses a real <caption>. See http://diveintomark.org/archives/2002/07/03
	@list($p, $pl) = each($pn); @list($n, $nl) = each($pn); #previous and next links, if applicable
	if($p) $p = '<span class="calendar-prev">'.($pl ? '<a href="'.htmlspecialchars($pl).'">'.$p.'</a>' : $p).'</span>&nbsp;';
	if($n) $n = '&nbsp;<span class="calendar-next">'.($nl ? '<a href="'.htmlspecialchars($nl).'">'.$n.'</a>' : $n).'</span>';
	$calendar = '<table class="calendar">'."\n".
		'<caption class="calendar-month">'.$p.($month_href ? '<a href="'.htmlspecialchars($month_href).'">'.$title.'</a>' : $title).$n."</caption>\n<tr>";

	if($day_name_length){ #if the day names should be shown ($day_name_length > 0)
		#if day_name_length is >3, the full name of the day will be printed
		foreach($day_names as $d)
			$calendar .= '<th abbr="'.htmlentities($d).'">'.htmlentities($day_name_length < 4 ? substr($d,0,$day_name_length) : $d).'</th>';
		$calendar .= "</tr>\n<tr>";
	}

	if($weekday > 0) $calendar .= '<td colspan="'.$weekday.'">&nbsp;</td>'; #initial 'empty' days
	for($day=1,$days_in_month=gmdate('t',$first_of_month); $day<=$days_in_month; $day++,$weekday++){
		if($weekday == 7){
			$weekday   = 0; #start a new week
			$calendar .= "</tr>\n<tr>";
		}
		if(isset($days[$day]) and is_array($days[$day])){
			@list($link, $classes, $content) = $days[$day];
			if(is_null($content))  $content  = $day;
			$calendar .= '<td'.($classes ? ' class="'.htmlspecialchars($classes).'">' : '>').
				($link ? '<a href="'.htmlspecialchars($link).'">'.$content.'</a>' : $content).'</td>';
		}
		else $calendar .= "<td>$day</td>";
	}
	if($weekday != 7) $calendar .= '<td colspan="'.(7-$weekday).'">&nbsp;</td>'; #remaining "empty" days

	return $calendar."</tr>\n</table>\n";
}
	function ejecutar(){
		$this->result=$this->conn->CacheExecute(300,$this->sql);
		//$this->cantidad=$this->conn->RecordCount();
	}
}
